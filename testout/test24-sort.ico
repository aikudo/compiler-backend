#Icode begin_time: 1997/02/25 18:06:07 PST
#Icode compiler_name: c0
#Icode src_filename: test24-sort.c0
#Icode pfx_filename: test24-sort
#    1: /* $RCSfile: test24-sort.ico,v $$Revision: 353.1 $ */
#    2: #include "c0-lib.h"
#    3: 
#    4: void selection_sort( int array[ ], int dimension ){
#    5:    int outer; int inner; int maxpos; int swap;
#    6:    outer = dimension - 1;
#    7:    while( outer > 0 ){
#    8:       maxpos = 1;
#    9:       inner = 0;
#   10:       while( inner <= outer ){
#   11:          if( array[ inner ] > array[ maxpos ] ){
#   12:             maxpos = inner;
#   13:          };
#   14:          inner = inner + 1;
#   15:       };
#   16:       if( maxpos != outer ){
#   17:          swap = array[ outer ];
#   18:          array[ outer ] = array[ maxpos ];
#   19:          array[ maxpos ] = swap;
#   20:       };
#   21:       outer = outer - 1;
#   22:    };
#   23: };
#   24: 
#   25: int main( ){
#   26:    int array[ 25 ];
#   27:    int count;
#   28:    int num;
#   29:    int done;
#   30:    int index;
#   31:    count = 0;
#   32:    done = 0;
#   33:    while( done == 0 ){
#   34:       if( count >= 25 ){
#   35:          done = 1;
#   36:       }else if( geti( &num ) == 0 ){
#   37:          done = 1;
#   38:       }else{
#   39:          array[ count ] = num;
#   40:          count = count + 1;
#   41:       };
#   42:    };
#   43:    selection_sort( array, count );
#   44:    index = 0;
#   45:    while( index < count ){
#   46:       puti( index );
#   47:       puts( ": " );
#   48:       puti( array[ index ] );
#   49:       putc( '\n' );
#   50:       index = index + 1;
#   51:    };
#   52:    return 0;
#   53: }
#
#
_selection_sort:
          fnc   2 void
          prm   0 int *_array.1
          prm   1 int _dimension.1
          loc   1 int _outer.1
          loc   1 int _inner.1
          loc   1 int _maxpos.1
          loc   1 int _swap.1
          tmp   1 int t0
          sub   _dimension.1 1 t0
          mov   t0 _outer.1
wh7008:   jle   _outer.1 0 br7008
lp7008:
          mov   1 _maxpos.1
          mov   0 _inner.1
wh10011:  jgt   _inner.1 _outer.1 br10011
lp10011:
if11011:
          tmp   1 int *t6
          idx   _array.1 _inner.1 t6
          tmp   1 int *t7
          idx   _array.1 _maxpos.1 t7
          jle   *t6 *t7 el11011
th11011:
          mov   _inner.1 _maxpos.1
el11011:
fi11011:
          tmp   1 int t10
          add   _inner.1 1 t10
          mov   t10 _inner.1
co10011:  jmp   wh10011
br10011:
if16008:  jeq   _maxpos.1 _outer.1 el16008
th16008:
          tmp   1 int *t13
          idx   _array.1 _outer.1 t13
          mov   *t13 _swap.1
          tmp   1 int *t15
          idx   _array.1 _outer.1 t15
          tmp   1 int *t16
          idx   _array.1 _maxpos.1 t16
          mov   *t16 *t15
          tmp   1 int *t18
          idx   _array.1 _maxpos.1 t18
          mov   _swap.1 *t18
el16008:
fi16008:
          tmp   1 int t20
          sub   _outer.1 1 t20
          mov   t20 _outer.1
co7008:   jmp   wh7008
br7008:
          ret   void
          end
#
_main:    fnc   0 int
          loc   25 int _array.2
          loc   1 int _count.2
          loc   1 int _num.2
          loc   1 int _done.2
          loc   1 int _index.2
          mov   0 _count.2
          mov   0 _done.2
wh33008:  jne   _done.2 0 br33008
lp33008:
if34008:  jlt   _count.2 25 el34008
th34008:
          mov   1 _done.2
          jmp   fi34008
el34008:
if36014:
          arg   0 _geti &_num.2
          tmp   1 int t28
          cal   1 _geti t28
          jne   t28 0 el36014
th36014:
          mov   1 _done.2
          jmp   fi36014
el36014:
          tmp   1 int *t31
          idx   &_array.2 _count.2 t31
          mov   _num.2 *t31
          tmp   1 int t33
          add   _count.2 1 t33
          mov   t33 _count.2
fi36014:
fi34008:
co33008:  jmp   wh33008
br33008:
          arg   0 _selection_sort &_array.2
          arg   1 _selection_sort _count.2
          tmp   1 void t35
          cal   2 _selection_sort t35
          mov   0 _index.2
wh45008:  jge   _index.2 _count.2 br45008
lp45008:
          arg   0 _puti _index.2
          tmp   1 int t38
          cal   1 _puti t38
          str   s39 ":\040"
          arg   0 _puts s39
          tmp   1 int t40
          cal   1 _puts t40
          tmp   1 int *t41
          idx   &_array.2 _index.2 t41
          arg   0 _puti *t41
          tmp   1 int t42
          cal   1 _puti t42
          arg   0 _putc '\n'
          tmp   1 int t43
          cal   1 _putc t43
          tmp   1 int t44
          add   _index.2 1 t44
          mov   t44 _index.2
co45008:  jmp   wh45008
br45008:
          ret   0
          xit   11
          end
#Icode end: 34 labels, 95 opcodes, 0 errors.
